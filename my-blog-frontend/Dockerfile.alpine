# Alternative Alpine-based Dockerfile with Rollup fix
FROM docker.xuanyuan.me/node:18-alpine AS builder

WORKDIR /app

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

RUN apk update && apk add --no-cache \
    python3 \
    make \
    g++ \
    autoconf \
    automake \
    libtool \
    nasm \
    pkgconfig \
    libpng-dev \
    libjpeg-turbo-dev \
    giflib-dev \
    gcompat \
    libc6-compat

# 安装pnpm
RUN npm install -g pnpm

# 设置pnpm镜像源
RUN pnpm config set registry https://registry.npmmirror.com && \
    pnpm config set disturl https://npmmirror.com/dist && \
    pnpm config set sass_binary_site https://npmmirror.com/mirrors/node-sass && \
    pnpm config set electron_mirror https://npmmirror.com/mirrors/electron/ && \
    pnpm config set puppeteer_download_host https://npmmirror.com/mirrors

# 复制package文件
COPY package.json pnpm-lock.yaml ./

# 设置环境变量
ENV NODE_ENV=production
ENV VITE_NODE_ENV=production

# 安装依赖，包括可选依赖以获取正确的Rollup二进制文件
RUN pnpm install --frozen-lockfile

# 手动安装musl版本的Rollup二进制文件（如果上面的安装失败）
RUN if [ ! -f node_modules/@rollup/rollup-linux-x64-musl/rollup.linux-x64-musl.node ]; then \
    pnpm add @rollup/rollup-linux-x64-musl --save-optional; \
    fi

COPY . .

# 构建应用
RUN pnpm run build:prod

FROM docker.xuanyuan.me/node:18-alpine AS production

WORKDIR /app

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

RUN npm install -g serve

COPY --from=builder /app/dist ./dist

RUN echo '#!/bin/sh\ncurl -f http://localhost:5173/health || exit 1' > /health-check.sh && \
    chmod +x /health-check.sh

# 暴露端口
EXPOSE 5173

# 启动命令
CMD ["serve", "-s", "dist", "-l", "5173", "--cors"]
