"""添加用户角色系统、通知系统和知识库增强功能

Revision ID: c979517aca26
Revises: bc13cdf0a306
Create Date: 2025-07-11 17:01:16.793899

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'c979517aca26'
down_revision: Union[str, None] = 'bc13cdf0a306'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_email', sa.String(length=100), nullable=False),
    sa.Column('subject', sa.String(length=200), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_logs_id'), 'email_logs', ['id'], unique=False)
    op.create_table('email_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('subject', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_email_templates_id'), 'email_templates', ['id'], unique=False)
    op.create_table('knowledge_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['knowledge_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_knowledge_categories_id'), 'knowledge_categories', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('COMMENT', 'REPLY', 'LIKE', 'ARTICLE_PUBLISHED', 'ARTICLE_APPROVED', 'ARTICLE_REJECTED', 'SYSTEM', name='notificationtype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('article_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.add_column('articles', sa.Column('knowledge_category', sa.String(length=100), nullable=True))
    op.add_column('articles', sa.Column('knowledge_difficulty', sa.String(length=20), nullable=True))
    op.add_column('articles', sa.Column('knowledge_tags', sa.Text(), nullable=True))
    op.add_column('articles', sa.Column('reading_time', sa.Integer(), nullable=True))
    op.add_column('articles', sa.Column('seo_keywords', sa.String(length=255), nullable=True))
    op.add_column('articles', sa.Column('seo_description', sa.String(length=160), nullable=True))
    op.add_column('articles', sa.Column('slug', sa.String(length=200), nullable=True))
    op.alter_column('articles', 'title',
               existing_type=mysql.VARCHAR(length=200),
               nullable=False)
    op.alter_column('articles', 'content',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('articles', 'author_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.create_unique_constraint(None, 'articles', ['slug'])
    op.add_column('users', sa.Column('role', sa.Enum('ADMIN', 'EDITOR', 'USER', name='userrole'), nullable=False))
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('failed_login_attempts', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('locked_until', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('reset_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('reset_token_expires', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('verification_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('verification_token_expires', sa.DateTime(), nullable=True))
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'hashed_password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.drop_column('users', 'verification_token_expires')
    op.drop_column('users', 'verification_token')
    op.drop_column('users', 'reset_token_expires')
    op.drop_column('users', 'reset_token')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'locked_until')
    op.drop_column('users', 'failed_login_attempts')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'role')
    op.drop_constraint(None, 'articles', type_='unique')
    op.alter_column('articles', 'author_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('articles', 'content',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('articles', 'title',
               existing_type=mysql.VARCHAR(length=200),
               nullable=True)
    op.drop_column('articles', 'slug')
    op.drop_column('articles', 'seo_description')
    op.drop_column('articles', 'seo_keywords')
    op.drop_column('articles', 'reading_time')
    op.drop_column('articles', 'knowledge_tags')
    op.drop_column('articles', 'knowledge_difficulty')
    op.drop_column('articles', 'knowledge_category')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_knowledge_categories_id'), table_name='knowledge_categories')
    op.drop_table('knowledge_categories')
    op.drop_index(op.f('ix_email_templates_id'), table_name='email_templates')
    op.drop_table('email_templates')
    op.drop_index(op.f('ix_email_logs_id'), table_name='email_logs')
    op.drop_table('email_logs')
    # ### end Alembic commands ###
